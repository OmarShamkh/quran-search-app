name: Build and deploy to Azure Web App - QuranicSearch

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Add web.config
      shell: powershell
      run: |
        $webConfig = @"
        <?xml version="1.0"?>
        <configuration>
          <system.webServer>
            <rewrite>
              <rules>
                <rule name="React Routes" stopProcessing="true">
                  <match url=".*" />
                  <conditions logicalGrouping="MatchAll">
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="/" />
                </rule>
              </rules>
            </rewrite>
            <handlers>
              <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
            </handlers>
            <staticContent>
              <mimeMap fileExtension=".json" mimeType="application/json" />
            </staticContent>
          </system.webServer>
        </configuration>
        "@
        Set-Content -Path "./build/web.config" -Value $webConfig

    - name: Add server.js for static serving
      shell: powershell
      run: |
        $serverJs = @"
        const express = require('express');
        const path = require('path');
        const app = express();

        app.use(express.static(path.join(__dirname)));

        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'index.html'));
        });

        const port = process.env.PORT || 8080;
        app.listen(port, () => {
          console.log('Server is running on port ' + port);
        });
        "@
        Set-Content -Path "./build/server.js" -Value $serverJs

    - name: Add package.json for production
      shell: powershell
      run: |
        $packageJson = @"
        {
          "name": "quranicsearch",
          "version": "1.0.0",
          "private": true,
          "dependencies": {
            "express": "^4.17.1"
          },
          "scripts": {
            "start": "node server.js"
          }
        }
        "@
        Set-Content -Path "./build/package.json" -Value $packageJson

    - name: Install production dependencies
      run: |
        cd build
        npm install --production

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'QuranicSearch'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./build

    - name: Post-deployment cleanup
      if: always()
      run: |
        if ($env:RUNNER_OS -eq "Windows") {
          Remove-Item -Path "./build" -Recurse -Force -ErrorAction SilentlyContinue
        }